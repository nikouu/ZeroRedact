{
  "api/ZeroRedact.CreditCardRedaction.html": {
    "href": "api/ZeroRedact.CreditCardRedaction.html",
    "title": "Enum CreditCardRedaction | ZeroRedact",
    "keywords": "Enum CreditCardRedaction Namespace ZeroRedact Assembly ZeroRedact.dll Defines the different types of redactions that can be applied to a credit card number. public enum CreditCardRedaction Fields All = 0 The credit card number is redacted. FixedLength = 1 The credit card number is redacted with a fixed length. Full = 2 The credit card number is redacted, preserving symbols. ShowFirstSixLastFour = 4 The first six digits and the last four digits of the credit card number are shown. ShowLastFour = 3 The last four digits of the credit card number are shown."
  },
  "api/ZeroRedact.CreditCardRedactorOptions.html": {
    "href": "api/ZeroRedact.CreditCardRedactorOptions.html",
    "title": "Struct CreditCardRedactorOptions | ZeroRedact",
    "keywords": "Struct CreditCardRedactorOptions Namespace ZeroRedact Assembly ZeroRedact.dll Credit card redactor options. public readonly struct CreditCardRedactorOptions Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Constructors CreditCardRedactorOptions() Constructs a new CreditCardRedactorOptions instance. public CreditCardRedactorOptions() Properties FixedLengthSize The fixed length size of the redaction. public int FixedLengthSize { get; init; } Property Value int RedactionCharacter The character used for the redaction. public char RedactionCharacter { get; init; } Property Value char RedactorType The type of redactor to apply. public CreditCardRedaction RedactorType { get; init; } Property Value CreditCardRedaction"
  },
  "api/ZeroRedact.DateRedaction.html": {
    "href": "api/ZeroRedact.DateRedaction.html",
    "title": "Enum DateRedaction | ZeroRedact",
    "keywords": "Enum DateRedaction Namespace ZeroRedact Assembly ZeroRedact.dll Defines the different types of redactions that can be applied to a date. public enum DateRedaction Fields All = 0 The date is redacted. Day = 3 The day is redacted. DayAndMonth = 6 The day and month are redacted. DayAndYear = 8 The day and year are redacted. FixedLength = 1 The date is redacted with a fixed length. Full = 2 The date is redacted, showing the date separator. Month = 4 The month is redacted. MonthAndYear = 7 The month and year are redacted. Year = 5 The year is redacted."
  },
  "api/ZeroRedact.DateRedactorOptions.html": {
    "href": "api/ZeroRedact.DateRedactorOptions.html",
    "title": "Struct DateRedactorOptions | ZeroRedact",
    "keywords": "Struct DateRedactorOptions Namespace ZeroRedact Assembly ZeroRedact.dll Date redactor options. public readonly struct DateRedactorOptions Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Constructors DateRedactorOptions() Constructs a new DateRedactorOptions instance. public DateRedactorOptions() Properties FixedLengthSize The fixed length size of the redaction. public int FixedLengthSize { get; init; } Property Value int RedactionCharacter The character used for the redaction. public char RedactionCharacter { get; init; } Property Value char RedactorType The type of redactor to apply. public DateRedaction RedactorType { get; init; } Property Value DateRedaction"
  },
  "api/ZeroRedact.EmailAddressRedaction.html": {
    "href": "api/ZeroRedact.EmailAddressRedaction.html",
    "title": "Enum EmailAddressRedaction | ZeroRedact",
    "keywords": "Enum EmailAddressRedaction Namespace ZeroRedact Assembly ZeroRedact.dll Defines the different types of redactions that can be applied to an email address. public enum EmailAddressRedaction Fields All = 0 The email address is redacted. FirstHalfUsername = 4 The first half of the username is redacted. FixedLength = 1 The email address is redacted with a fixed width. Full = 2 Only the @ symbol and final dot is shown. Middle = 5 The second half of the username and the first half of the domain are redacted. MostUsername = 6 Only the first and last characters of the username are shown along with showing the full domain. ShowFirstCharacters = 7 Only the first character of the username and host are shown along with showing the full domain. Username = 3 The local-part/username is redacted."
  },
  "api/ZeroRedact.EmailAddressRedactorOptions.html": {
    "href": "api/ZeroRedact.EmailAddressRedactorOptions.html",
    "title": "Struct EmailAddressRedactorOptions | ZeroRedact",
    "keywords": "Struct EmailAddressRedactorOptions Namespace ZeroRedact Assembly ZeroRedact.dll Email address redactor options. public readonly struct EmailAddressRedactorOptions Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Constructors EmailAddressRedactorOptions() Constructs a new EmailAddressRedactorOptions instance. public EmailAddressRedactorOptions() Properties FixedLengthSize The fixed length size of the redaction. public int FixedLengthSize { get; init; } Property Value int RedactionCharacter The character used for the redaction. public char RedactionCharacter { get; init; } Property Value char RedactorType The type of redactor to apply. public EmailAddressRedaction RedactorType { get; init; } Property Value EmailAddressRedaction"
  },
  "api/ZeroRedact.IPv4Redaction.html": {
    "href": "api/ZeroRedact.IPv4Redaction.html",
    "title": "Enum IPv4Redaction | ZeroRedact",
    "keywords": "Enum IPv4Redaction Namespace ZeroRedact Assembly ZeroRedact.dll Defines the different types of redactions that can be applied to an IPv4 address. public enum IPv4Redaction Fields All = 0 The IPv4 address is redacted. FixedLength = 1 The IPv4 address is redacted with a fixed length. Full = 2 The IPv4 address is redacted, preserving symbols. ShowLastOctet = 3 The last octet of the IPv4 address are shown."
  },
  "api/ZeroRedact.IPv4RedactorOptions.html": {
    "href": "api/ZeroRedact.IPv4RedactorOptions.html",
    "title": "Struct IPv4RedactorOptions | ZeroRedact",
    "keywords": "Struct IPv4RedactorOptions Namespace ZeroRedact Assembly ZeroRedact.dll IPV4 redactor options. public readonly struct IPv4RedactorOptions Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Constructors IPv4RedactorOptions() Constructs a new IPv4RedactorOptions instance. public IPv4RedactorOptions() Properties FixedLengthSize The fixed length size of the redaction. public int FixedLengthSize { get; init; } Property Value int RedactionCharacter The character used for the redaction. public char RedactionCharacter { get; init; } Property Value char RedactorType The type of redactor to apply. public IPv4Redaction RedactorType { get; init; } Property Value IPv4Redaction"
  },
  "api/ZeroRedact.IPv6Redaction.html": {
    "href": "api/ZeroRedact.IPv6Redaction.html",
    "title": "Enum IPv6Redaction | ZeroRedact",
    "keywords": "Enum IPv6Redaction Namespace ZeroRedact Assembly ZeroRedact.dll Defines the different types of redactions that can be applied to an IPv6 address. public enum IPv6Redaction Fields All = 0 The IPv6 address is redacted. FixedLength = 1 The IPv4 address is redacted with a fixed length. Full = 2 The IPv4 address is redacted, preserving symbols. ShowLastQuartet = 3 The last quartet of the IPv6 address are shown."
  },
  "api/ZeroRedact.IPv6RedactorOptions.html": {
    "href": "api/ZeroRedact.IPv6RedactorOptions.html",
    "title": "Struct IPv6RedactorOptions | ZeroRedact",
    "keywords": "Struct IPv6RedactorOptions Namespace ZeroRedact Assembly ZeroRedact.dll IPv6 redactor options. public readonly struct IPv6RedactorOptions Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Constructors IPv6RedactorOptions() Constructs a new IPv6RedactorOptions instance. public IPv6RedactorOptions() Properties FixedLengthSize The fixed length size of the redaction. public int FixedLengthSize { get; init; } Property Value int RedactionCharacter The character used for the redaction. public char RedactionCharacter { get; init; } Property Value char RedactorType The type of redactor to apply. public IPv6Redaction RedactorType { get; init; } Property Value IPv6Redaction"
  },
  "api/ZeroRedact.MACAddressRedaction.html": {
    "href": "api/ZeroRedact.MACAddressRedaction.html",
    "title": "Enum MACAddressRedaction | ZeroRedact",
    "keywords": "Enum MACAddressRedaction Namespace ZeroRedact Assembly ZeroRedact.dll Defines the different types of redactions that can be applied to a MAC address. public enum MACAddressRedaction Fields All = 0 The MAC address is redacted. FixedLength = 1 The MAC address is redacted with a fixed length. Full = 2 The MAC address is redacted, preserving symbols. ShowLastByte = 3 The last byte of the MAC address is shown."
  },
  "api/ZeroRedact.MACAddressRedactorOptions.html": {
    "href": "api/ZeroRedact.MACAddressRedactorOptions.html",
    "title": "Struct MACAddressRedactorOptions | ZeroRedact",
    "keywords": "Struct MACAddressRedactorOptions Namespace ZeroRedact Assembly ZeroRedact.dll MAC address redactor options. public readonly struct MACAddressRedactorOptions Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Constructors MACAddressRedactorOptions() Constructs a new MACAddressRedactorOptions instance. public MACAddressRedactorOptions() Properties FixedLengthSize The fixed length size of the redaction. public int FixedLengthSize { get; init; } Property Value int RedactionCharacter The character used for the redaction. public char RedactionCharacter { get; init; } Property Value char RedactorType The type of redactor to apply. public MACAddressRedaction RedactorType { get; init; } Property Value MACAddressRedaction"
  },
  "api/ZeroRedact.PhoneNumberRedaction.html": {
    "href": "api/ZeroRedact.PhoneNumberRedaction.html",
    "title": "Enum PhoneNumberRedaction | ZeroRedact",
    "keywords": "Enum PhoneNumberRedaction Namespace ZeroRedact Assembly ZeroRedact.dll Defines the different types of redactions that can be applied to a phone number. public enum PhoneNumberRedaction Fields All = 0 The phone number is redacted. FixedLength = 1 The phone number is redacted with a fixed length. Full = 2 The phone number is redacted, preserving symbols. ShowLastFour = 3 The last four digits of the credit card number are shown."
  },
  "api/ZeroRedact.PhoneNumberRedactorOptions.html": {
    "href": "api/ZeroRedact.PhoneNumberRedactorOptions.html",
    "title": "Struct PhoneNumberRedactorOptions | ZeroRedact",
    "keywords": "Struct PhoneNumberRedactorOptions Namespace ZeroRedact Assembly ZeroRedact.dll Phone number redactor options. public readonly struct PhoneNumberRedactorOptions Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Constructors PhoneNumberRedactorOptions() Constructs a new PhoneNumberRedactorOptions instance. public PhoneNumberRedactorOptions() Properties FixedLengthSize The fixed length size of the redaction. public int FixedLengthSize { get; init; } Property Value int RedactionCharacter The character used for the redaction. public char RedactionCharacter { get; init; } Property Value char RedactorType The type of redactor to apply. public PhoneNumberRedaction RedactorType { get; init; } Property Value PhoneNumberRedaction"
  },
  "api/ZeroRedact.Redactor.html": {
    "href": "api/ZeroRedact.Redactor.html",
    "title": "Class Redactor | ZeroRedact",
    "keywords": "Class Redactor Namespace ZeroRedact Assembly ZeroRedact.dll Supports all classes in the .NET class hierarchy and provides low-level services to derived classes. This is the ultimate base class of all .NET classes; it is the root of the type hierarchy. public sealed class Redactor : IRedactor Inheritance object Redactor Implements IRedactor Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.ReferenceEquals(object, object) object.ToString() Constructors Redactor() Initializes a new instance of the Redactor class. public Redactor() Redactor(RedactorOptions) Initializes a new instance of the Redactor class with the specified options. public Redactor(RedactorOptions options) Parameters options RedactorOptions The options to configure the redactor. Exceptions ArgumentOutOfRangeException Thrown when options has a lass than 0 FixedLengthSize. Methods RedactCreditCard(ReadOnlySpan<char>) Redacts the provided credit card number. public ReadOnlySpan<char> RedactCreditCard(ReadOnlySpan<char> creditCardNumber) Parameters creditCardNumber ReadOnlySpan<char> The credit card number to redact. Returns ReadOnlySpan<char> RedactCreditCard(ReadOnlySpan<char>, CreditCardRedactorOptions) Redacts the provided credit card number. public ReadOnlySpan<char> RedactCreditCard(ReadOnlySpan<char> creditCardNumber, CreditCardRedactorOptions redactorOptions) Parameters creditCardNumber ReadOnlySpan<char> The credit card number to redact. redactorOptions CreditCardRedactorOptions The options to control redaction behavior. Returns ReadOnlySpan<char> RedactCreditCard(string) Redacts the provided credit card number. public string RedactCreditCard(string creditCardNumber) Parameters creditCardNumber string The credit card number to redact. Returns string RedactCreditCard(string, CreditCardRedactorOptions) Redacts the provided credit card number. public string RedactCreditCard(string creditCardNumber, CreditCardRedactorOptions redactorOptions) Parameters creditCardNumber string The credit card number to redact. redactorOptions CreditCardRedactorOptions The options to control redaction behavior. Returns string RedactDate(DateOnly) Redacts the provided date. public string RedactDate(DateOnly date) Parameters date DateOnly The date to redact. Returns string Returns redacted short date formatted for the current CultureInfo. RedactDate(DateOnly, DateRedactorOptions) Redacts the provided date. public string RedactDate(DateOnly date, DateRedactorOptions redactorOptions) Parameters date DateOnly The date to redact. redactorOptions DateRedactorOptions The options to control redaction behavior. Returns string Returns redacted short date formatted for the current CultureInfo. RedactDate(DateTime) Redacts the provided date. public string RedactDate(DateTime date) Parameters date DateTime The date to redact. Returns string Returns redacted short date formatted for the current CultureInfo. RedactDate(DateTime, DateRedactorOptions) Redacts the provided date. public string RedactDate(DateTime date, DateRedactorOptions redactorOptions) Parameters date DateTime The date to redact. redactorOptions DateRedactorOptions The options to control redaction behavior. Returns string Returns redacted short date formatted for the current CultureInfo. RedactEmailAddress(MailAddress) Redacts the provided email address. public string RedactEmailAddress(MailAddress emailAddress) Parameters emailAddress MailAddress The email address to redact. Returns string RedactEmailAddress(MailAddress, EmailAddressRedactorOptions) Redacts the provided email address. public string RedactEmailAddress(MailAddress emailAddress, EmailAddressRedactorOptions redactorOptions) Parameters emailAddress MailAddress The email address to redact. redactorOptions EmailAddressRedactorOptions The options to control redaction behavior. Returns string RedactEmailAddress(ReadOnlySpan<char>) Redacts the provided email address. public ReadOnlySpan<char> RedactEmailAddress(ReadOnlySpan<char> emailAddress) Parameters emailAddress ReadOnlySpan<char> The email address to redact. Returns ReadOnlySpan<char> RedactEmailAddress(ReadOnlySpan<char>, EmailAddressRedactorOptions) Redacts the provided email address. public ReadOnlySpan<char> RedactEmailAddress(ReadOnlySpan<char> emailAddress, EmailAddressRedactorOptions redactorOptions) Parameters emailAddress ReadOnlySpan<char> The email address to redact. redactorOptions EmailAddressRedactorOptions The options to control redaction behavior. Returns ReadOnlySpan<char> RedactEmailAddress(string) Redacts the provided email address. public string RedactEmailAddress(string emailAddress) Parameters emailAddress string The email address to redact. Returns string RedactEmailAddress(string, EmailAddressRedactorOptions) Redacts the provided email address. public string RedactEmailAddress(string emailAddress, EmailAddressRedactorOptions redactorOptions) Parameters emailAddress string The email address to redact. redactorOptions EmailAddressRedactorOptions The options to control redaction behavior. Returns string RedactIPv4Address(ReadOnlySpan<char>) Redacts the provided IPv4 address. public ReadOnlySpan<char> RedactIPv4Address(ReadOnlySpan<char> ipAddress) Parameters ipAddress ReadOnlySpan<char> The IPv4 address to redact. Returns ReadOnlySpan<char> RedactIPv4Address(ReadOnlySpan<char>, IPv4RedactorOptions) Redacts the provided IPv4 address. public ReadOnlySpan<char> RedactIPv4Address(ReadOnlySpan<char> ipAddress, IPv4RedactorOptions redactorOptions) Parameters ipAddress ReadOnlySpan<char> The IPv4 address to redact. redactorOptions IPv4RedactorOptions The options to control redaction behavior. Returns ReadOnlySpan<char> RedactIPv4Address(string) Redacts the provided IPv4 address. public string RedactIPv4Address(string ipAddress) Parameters ipAddress string The IPv4 address to redact. Returns string RedactIPv4Address(string, IPv4RedactorOptions) Redacts the provided IPv4 address. public string RedactIPv4Address(string ipAddress, IPv4RedactorOptions redactorOptions) Parameters ipAddress string The IPv4 address to redact. redactorOptions IPv4RedactorOptions The options to control redaction behavior. Returns string RedactIPv6Address(ReadOnlySpan<char>) Redacts the provided IPv6 address. public ReadOnlySpan<char> RedactIPv6Address(ReadOnlySpan<char> ipAddress) Parameters ipAddress ReadOnlySpan<char> The IPv6 address to redact Returns ReadOnlySpan<char> RedactIPv6Address(ReadOnlySpan<char>, IPv6RedactorOptions) Redacts the provided IPv6 address. public ReadOnlySpan<char> RedactIPv6Address(ReadOnlySpan<char> ipAddress, IPv6RedactorOptions redactorOptions) Parameters ipAddress ReadOnlySpan<char> The IPv6 address to redact. redactorOptions IPv6RedactorOptions The options to control redaction behavior. Returns ReadOnlySpan<char> RedactIPv6Address(string) Redacts the provided IPv6 address. public string RedactIPv6Address(string ipAddress) Parameters ipAddress string The IPv6 address to redact Returns string RedactIPv6Address(string, IPv6RedactorOptions) Redacts the provided IPv6 address. public string RedactIPv6Address(string ipAddress, IPv6RedactorOptions redactorOptions) Parameters ipAddress string The IPv6 address to redact. redactorOptions IPv6RedactorOptions The options to control redaction behavior. Returns string RedactMACAddress(ReadOnlySpan<char>) Redacts the provided MAC address. public ReadOnlySpan<char> RedactMACAddress(ReadOnlySpan<char> macAddress) Parameters macAddress ReadOnlySpan<char> The MAC address to redact. Returns ReadOnlySpan<char> RedactMACAddress(ReadOnlySpan<char>, MACAddressRedactorOptions) Redacts the provided MAC address. public ReadOnlySpan<char> RedactMACAddress(ReadOnlySpan<char> macAddress, MACAddressRedactorOptions redactorOptions) Parameters macAddress ReadOnlySpan<char> The MAC address to redact. redactorOptions MACAddressRedactorOptions The options to control redaction behavior. Returns ReadOnlySpan<char> RedactMACAddress(string) Redacts the provided MAC address. public string RedactMACAddress(string macAddress) Parameters macAddress string The MAC address to redact. Returns string RedactMACAddress(string, MACAddressRedactorOptions) Redacts the provided MAC address. public string RedactMACAddress(string macAddress, MACAddressRedactorOptions redactorOptions) Parameters macAddress string The MAC address to redact. redactorOptions MACAddressRedactorOptions The options to control redaction behavior. Returns string RedactPhoneNumber(ReadOnlySpan<char>) Redacts the provided phone number. public ReadOnlySpan<char> RedactPhoneNumber(ReadOnlySpan<char> phoneNumber) Parameters phoneNumber ReadOnlySpan<char> The phone number to redact. Returns ReadOnlySpan<char> RedactPhoneNumber(ReadOnlySpan<char>, PhoneNumberRedactorOptions) Redacts the provided phone number. public ReadOnlySpan<char> RedactPhoneNumber(ReadOnlySpan<char> phoneNumber, PhoneNumberRedactorOptions redactorOptions) Parameters phoneNumber ReadOnlySpan<char> The phone number to redact. redactorOptions PhoneNumberRedactorOptions The options to control redaction behavior. Returns ReadOnlySpan<char> RedactPhoneNumber(string) Redacts the provided phone number. public string RedactPhoneNumber(string phoneNumber) Parameters phoneNumber string The phone number to redact. Returns string RedactPhoneNumber(string, PhoneNumberRedactorOptions) Redacts the provided phone number. public string RedactPhoneNumber(string phoneNumber, PhoneNumberRedactorOptions redactorOptions) Parameters phoneNumber string The phone number to redact. redactorOptions PhoneNumberRedactorOptions The options to control redaction behavior. Returns string RedactString(ReadOnlySpan<char>) Redacts the provided string. public ReadOnlySpan<char> RedactString(ReadOnlySpan<char> value) Parameters value ReadOnlySpan<char> The string to redact. Returns ReadOnlySpan<char> RedactString(ReadOnlySpan<char>, StringRedactorOptions) Redacts the provided string. public ReadOnlySpan<char> RedactString(ReadOnlySpan<char> value, StringRedactorOptions redactorOptions) Parameters value ReadOnlySpan<char> The string to redact. redactorOptions StringRedactorOptions The redactorOptions to control redaction behavior. Returns ReadOnlySpan<char> RedactString(string) Redacts the provided string. public string RedactString(string value) Parameters value string The string to redact. Returns string RedactString(string, StringRedactorOptions) Redacts the provided string. public string RedactString(string value, StringRedactorOptions redactorOptions) Parameters value string The string to redact. redactorOptions StringRedactorOptions The redactorOptions to control redaction behavior. Returns string"
  },
  "api/ZeroRedact.RedactorOptions.html": {
    "href": "api/ZeroRedact.RedactorOptions.html",
    "title": "Struct RedactorOptions | ZeroRedact",
    "keywords": "Struct RedactorOptions Namespace ZeroRedact Assembly ZeroRedact.dll Provides options to be used with Redactor public readonly struct RedactorOptions Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Constructors RedactorOptions() Constructs a new RedactorOptions instance. public RedactorOptions() Properties CreditCardRedactorOptions The options for redacting credit card numbers. public CreditCardRedactorOptions CreditCardRedactorOptions { get; init; } Property Value CreditCardRedactorOptions DateRedactorOptions The options for redacting dates. public DateRedactorOptions DateRedactorOptions { get; init; } Property Value DateRedactorOptions EmailAddressRedactorOptions The options for redacting email addresses. public EmailAddressRedactorOptions EmailAddressRedactorOptions { get; init; } Property Value EmailAddressRedactorOptions FixedLengthSize The fixed length size of the redaction. public int FixedLengthSize { get; init; } Property Value int IPv4RedactorOptions The options for redacting IPv4 addresses. public IPv4RedactorOptions IPv4RedactorOptions { get; init; } Property Value IPv4RedactorOptions IPv6RedactorOptions The options for redacting IPv6 addresses. public IPv6RedactorOptions IPv6RedactorOptions { get; init; } Property Value IPv6RedactorOptions MACAddressRedactorOptions The MAC address redactor options. public MACAddressRedactorOptions MACAddressRedactorOptions { get; init; } Property Value MACAddressRedactorOptions PhoneNumberRedactorOptions The options for redacting phone numbers. public PhoneNumberRedactorOptions PhoneNumberRedactorOptions { get; init; } Property Value PhoneNumberRedactorOptions RedactionCharacter The character used for the redaction. public char RedactionCharacter { get; init; } Property Value char StringRedactorOptions The options for redacting strings. public StringRedactorOptions StringRedactorOptions { get; init; } Property Value StringRedactorOptions"
  },
  "api/ZeroRedact.Redactors.IRedactor.html": {
    "href": "api/ZeroRedact.Redactors.IRedactor.html",
    "title": "Interface IRedactor | ZeroRedact",
    "keywords": "Interface IRedactor Namespace ZeroRedact.Redactors Assembly ZeroRedact.dll Implements redaction capabilities. public interface IRedactor Methods RedactCreditCard(ReadOnlySpan<char>) Redacts the provided credit card number. ReadOnlySpan<char> RedactCreditCard(ReadOnlySpan<char> creditCardNumber) Parameters creditCardNumber ReadOnlySpan<char> The credit card number to redact. Returns ReadOnlySpan<char> RedactCreditCard(ReadOnlySpan<char>, CreditCardRedactorOptions) Redacts the provided credit card number. ReadOnlySpan<char> RedactCreditCard(ReadOnlySpan<char> creditCardNumber, CreditCardRedactorOptions redactorOptions) Parameters creditCardNumber ReadOnlySpan<char> The credit card number to redact. redactorOptions CreditCardRedactorOptions The options to control redaction behavior. Returns ReadOnlySpan<char> RedactCreditCard(string) Redacts the provided credit card number. string RedactCreditCard(string creditCardNumber) Parameters creditCardNumber string The credit card number to redact. Returns string RedactCreditCard(string, CreditCardRedactorOptions) Redacts the provided credit card number. string RedactCreditCard(string creditCardNumber, CreditCardRedactorOptions redactorOptions) Parameters creditCardNumber string The credit card number to redact. redactorOptions CreditCardRedactorOptions The options to control redaction behavior. Returns string RedactDate(DateOnly) Redacts the provided date. string RedactDate(DateOnly date) Parameters date DateOnly The date to redact. Returns string Returns redacted short date formatted for the current CultureInfo. RedactDate(DateOnly, DateRedactorOptions) Redacts the provided date. string RedactDate(DateOnly date, DateRedactorOptions redactorOptions) Parameters date DateOnly The date to redact. redactorOptions DateRedactorOptions The options to control redaction behavior. Returns string Returns redacted short date formatted for the current CultureInfo. RedactDate(DateTime) Redacts the provided date. string RedactDate(DateTime date) Parameters date DateTime The date to redact. Returns string Returns redacted short date formatted for the current CultureInfo. RedactDate(DateTime, DateRedactorOptions) Redacts the provided date. string RedactDate(DateTime date, DateRedactorOptions redactorOptions) Parameters date DateTime The date to redact. redactorOptions DateRedactorOptions The options to control redaction behavior. Returns string Returns redacted short date formatted for the current CultureInfo. RedactEmailAddress(MailAddress) Redacts the provided email address. string RedactEmailAddress(MailAddress emailAddress) Parameters emailAddress MailAddress The email address to redact. Returns string RedactEmailAddress(MailAddress, EmailAddressRedactorOptions) Redacts the provided email address. string RedactEmailAddress(MailAddress emailAddress, EmailAddressRedactorOptions redactorOptions) Parameters emailAddress MailAddress The email address to redact. redactorOptions EmailAddressRedactorOptions The options to control redaction behavior. Returns string RedactEmailAddress(ReadOnlySpan<char>) Redacts the provided email address. ReadOnlySpan<char> RedactEmailAddress(ReadOnlySpan<char> emailAddress) Parameters emailAddress ReadOnlySpan<char> The email address to redact. Returns ReadOnlySpan<char> RedactEmailAddress(ReadOnlySpan<char>, EmailAddressRedactorOptions) Redacts the provided email address. ReadOnlySpan<char> RedactEmailAddress(ReadOnlySpan<char> emailAddress, EmailAddressRedactorOptions redactorOptions) Parameters emailAddress ReadOnlySpan<char> The email address to redact. redactorOptions EmailAddressRedactorOptions The options to control redaction behavior. Returns ReadOnlySpan<char> RedactEmailAddress(string) Redacts the provided email address. string RedactEmailAddress(string emailAddress) Parameters emailAddress string The email address to redact. Returns string RedactEmailAddress(string, EmailAddressRedactorOptions) Redacts the provided email address. string RedactEmailAddress(string emailAddress, EmailAddressRedactorOptions redactorOptions) Parameters emailAddress string The email address to redact. redactorOptions EmailAddressRedactorOptions The options to control redaction behavior. Returns string RedactIPv4Address(ReadOnlySpan<char>) Redacts the provided IPv4 address. ReadOnlySpan<char> RedactIPv4Address(ReadOnlySpan<char> ipAddress) Parameters ipAddress ReadOnlySpan<char> The IPv4 address to redact. Returns ReadOnlySpan<char> RedactIPv4Address(ReadOnlySpan<char>, IPv4RedactorOptions) Redacts the provided IPv4 address. ReadOnlySpan<char> RedactIPv4Address(ReadOnlySpan<char> ipAddress, IPv4RedactorOptions redactorOptions) Parameters ipAddress ReadOnlySpan<char> The IPv4 address to redact. redactorOptions IPv4RedactorOptions The options to control redaction behavior. Returns ReadOnlySpan<char> RedactIPv4Address(string) Redacts the provided IPv4 address. string RedactIPv4Address(string ipAddress) Parameters ipAddress string The IPv4 address to redact. Returns string RedactIPv4Address(string, IPv4RedactorOptions) Redacts the provided IPv4 address. string RedactIPv4Address(string ipAddress, IPv4RedactorOptions redactorOptions) Parameters ipAddress string The IPv4 address to redact. redactorOptions IPv4RedactorOptions The options to control redaction behavior. Returns string RedactIPv6Address(ReadOnlySpan<char>) Redacts the provided IPv6 address. ReadOnlySpan<char> RedactIPv6Address(ReadOnlySpan<char> ipAddress) Parameters ipAddress ReadOnlySpan<char> The IPv6 address to redact Returns ReadOnlySpan<char> RedactIPv6Address(ReadOnlySpan<char>, IPv6RedactorOptions) Redacts the provided IPv6 address. ReadOnlySpan<char> RedactIPv6Address(ReadOnlySpan<char> ipAddress, IPv6RedactorOptions redactorOptions) Parameters ipAddress ReadOnlySpan<char> The IPv6 address to redact. redactorOptions IPv6RedactorOptions The options to control redaction behavior. Returns ReadOnlySpan<char> RedactIPv6Address(string) Redacts the provided IPv6 address. string RedactIPv6Address(string ipAddress) Parameters ipAddress string The IPv6 address to redact Returns string RedactIPv6Address(string, IPv6RedactorOptions) Redacts the provided IPv6 address. string RedactIPv6Address(string ipAddress, IPv6RedactorOptions redactorOptions) Parameters ipAddress string The IPv6 address to redact. redactorOptions IPv6RedactorOptions The options to control redaction behavior. Returns string RedactMACAddress(ReadOnlySpan<char>) Redacts the provided MAC address. ReadOnlySpan<char> RedactMACAddress(ReadOnlySpan<char> macAddress) Parameters macAddress ReadOnlySpan<char> The MAC address to redact. Returns ReadOnlySpan<char> RedactMACAddress(ReadOnlySpan<char>, MACAddressRedactorOptions) Redacts the provided MAC address. ReadOnlySpan<char> RedactMACAddress(ReadOnlySpan<char> macAddress, MACAddressRedactorOptions redactorOptions) Parameters macAddress ReadOnlySpan<char> The MAC address to redact. redactorOptions MACAddressRedactorOptions The options to control redaction behavior. Returns ReadOnlySpan<char> RedactMACAddress(string) Redacts the provided MAC address. string RedactMACAddress(string macAddress) Parameters macAddress string The MAC address to redact. Returns string RedactMACAddress(string, MACAddressRedactorOptions) Redacts the provided MAC address. string RedactMACAddress(string macAddress, MACAddressRedactorOptions redactorOptions) Parameters macAddress string The MAC address to redact. redactorOptions MACAddressRedactorOptions The options to control redaction behavior. Returns string RedactPhoneNumber(ReadOnlySpan<char>) Redacts the provided phone number. ReadOnlySpan<char> RedactPhoneNumber(ReadOnlySpan<char> phoneNumber) Parameters phoneNumber ReadOnlySpan<char> The phone number to redact. Returns ReadOnlySpan<char> RedactPhoneNumber(ReadOnlySpan<char>, PhoneNumberRedactorOptions) Redacts the provided phone number. ReadOnlySpan<char> RedactPhoneNumber(ReadOnlySpan<char> phoneNumber, PhoneNumberRedactorOptions redactorOptions) Parameters phoneNumber ReadOnlySpan<char> The phone number to redact. redactorOptions PhoneNumberRedactorOptions The options to control redaction behavior. Returns ReadOnlySpan<char> RedactPhoneNumber(string) Redacts the provided phone number. string RedactPhoneNumber(string phoneNumber) Parameters phoneNumber string The phone number to redact. Returns string RedactPhoneNumber(string, PhoneNumberRedactorOptions) Redacts the provided phone number. string RedactPhoneNumber(string phoneNumber, PhoneNumberRedactorOptions redactorOptions) Parameters phoneNumber string The phone number to redact. redactorOptions PhoneNumberRedactorOptions The options to control redaction behavior. Returns string RedactString(ReadOnlySpan<char>) Redacts the provided string. ReadOnlySpan<char> RedactString(ReadOnlySpan<char> value) Parameters value ReadOnlySpan<char> The string to redact. Returns ReadOnlySpan<char> RedactString(ReadOnlySpan<char>, StringRedactorOptions) Redacts the provided string. ReadOnlySpan<char> RedactString(ReadOnlySpan<char> value, StringRedactorOptions redactorOptions) Parameters value ReadOnlySpan<char> The string to redact. redactorOptions StringRedactorOptions The redactorOptions to control redaction behavior. Returns ReadOnlySpan<char> RedactString(string) Redacts the provided string. string RedactString(string value) Parameters value string The string to redact. Returns string RedactString(string, StringRedactorOptions) Redacts the provided string. string RedactString(string value, StringRedactorOptions redactorOptions) Parameters value string The string to redact. redactorOptions StringRedactorOptions The redactorOptions to control redaction behavior. Returns string"
  },
  "api/ZeroRedact.Redactors.html": {
    "href": "api/ZeroRedact.Redactors.html",
    "title": "Namespace ZeroRedact.Redactors | ZeroRedact",
    "keywords": "Namespace ZeroRedact.Redactors Interfaces IRedactor Implements redaction capabilities."
  },
  "api/ZeroRedact.StringRedaction.html": {
    "href": "api/ZeroRedact.StringRedaction.html",
    "title": "Enum StringRedaction | ZeroRedact",
    "keywords": "Enum StringRedaction Namespace ZeroRedact Assembly ZeroRedact.dll Defines the different types of redactions that can be applied to a string. public enum StringRedaction Fields All = 0 The string is redacted. FirstHalf = 2 The first half of the string is redacted. FixedLength = 1 The string is redacted with a fixed length. IgnoreSymbols = 4 All characters are redacted except symbols. SecondHalf = 3 The second half of the string is redacted."
  },
  "api/ZeroRedact.StringRedactorOptions.html": {
    "href": "api/ZeroRedact.StringRedactorOptions.html",
    "title": "Struct StringRedactorOptions | ZeroRedact",
    "keywords": "Struct StringRedactorOptions Namespace ZeroRedact Assembly ZeroRedact.dll String redactor options. public readonly struct StringRedactorOptions Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Constructors StringRedactorOptions() Constructs a new StringRedactorOptions instance. public StringRedactorOptions() Properties FixedLengthSize The fixed length size of the redaction. public int FixedLengthSize { get; init; } Property Value int RedactionCharacter The character used for the redaction. public char RedactionCharacter { get; init; } Property Value char RedactorType The type of redactor to apply. public StringRedaction RedactorType { get; init; } Property Value StringRedaction"
  },
  "api/ZeroRedact.html": {
    "href": "api/ZeroRedact.html",
    "title": "Namespace ZeroRedact | ZeroRedact",
    "keywords": "Namespace ZeroRedact Classes Redactor Supports all classes in the .NET class hierarchy and provides low-level services to derived classes. This is the ultimate base class of all .NET classes; it is the root of the type hierarchy. Structs CreditCardRedactorOptions Credit card redactor options. DateRedactorOptions Date redactor options. EmailAddressRedactorOptions Email address redactor options. IPv4RedactorOptions IPV4 redactor options. IPv6RedactorOptions IPv6 redactor options. MACAddressRedactorOptions MAC address redactor options. PhoneNumberRedactorOptions Phone number redactor options. RedactorOptions Provides options to be used with Redactor StringRedactorOptions String redactor options. Enums CreditCardRedaction Defines the different types of redactions that can be applied to a credit card number. DateRedaction Defines the different types of redactions that can be applied to a date. EmailAddressRedaction Defines the different types of redactions that can be applied to an email address. IPv4Redaction Defines the different types of redactions that can be applied to an IPv4 address. IPv6Redaction Defines the different types of redactions that can be applied to an IPv6 address. MACAddressRedaction Defines the different types of redactions that can be applied to a MAC address. PhoneNumberRedaction Defines the different types of redactions that can be applied to a phone number. StringRedaction Defines the different types of redactions that can be applied to a string."
  },
  "demo/index.html": {
    "href": "demo/index.html",
    "title": "| ZeroRedact",
    "keywords": ""
  },
  "docfx/getting-started.html": {
    "href": "docfx/getting-started.html",
    "title": "Getting Started | ZeroRedact",
    "keywords": "Getting Started"
  },
  "docfx/introduction.html": {
    "href": "docfx/introduction.html",
    "title": "Introduction | ZeroRedact",
    "keywords": "Introduction"
  },
  "index.html": {
    "href": "index.html",
    "title": "ZeroRedact | ZeroRedact",
    "keywords": "ZeroRedact An extremely fast, simple, zero allocation redacting library for .NET. Getting started Install via NuGet: dotnet add package Nikouu.ZeroRedact The following shows the default redaction which aims to hide the sensitive information while still making it clear what the data type is. var redactor = new Redactor(); // returns \"*************\" var stringResult = redactor.RedactString(\"Hello, World!\"); // returns \"*****@*******.***\" var emailAddressResult = redactor.RedactEmailAddress(\"email@example.com\"); // returns \"****-****-****-****\" var creditCardResult = redactor.RedactCreditCard(\"4111-1111-1111-1111\"); // returns based on current culture // en-NZ: \"**/**/****\" // en-US: \"*/**/****\" // ja-JP: \"****/**/**\" // InvariantCulture: \"**/**/****\" var dateResult = redactor.RedactDate(new DateTime(2023, 10, 5)); // returns \"***-***-****\" var phoneNumberResult = redactor.RedactPhoneNumber(\"212-456-7890\"); // returns \"***.*.*.***\" var ipv4Result = redactor.RedactIPv4Address(\"192.0.2.146\"); // returns \"****:****:****:****:****:****:****:****\" var ipv6Result = redactor.RedactIPv6Address(\"2001:0000:130F:0000:0000:09C0:876A:130B\"); // \"**:**:**:**:**:**\" var macResult = redactor.RedactMACAddress(\"00:B0:D0:63:C2:26\"); Configuration ZeroRedact can be configured in two ways: via constructor, and via a redaction method. Both using the appropriate redactor option object. Configuration has three layers with least to most priority: Base defaults within the Redactor object. Passed in options to the Redactor object constructor Passed in options to a redaction method at the time of redaction This example shows changing the base defaults. This will apply to every redaction, whether it's a string or email address, etc. // Example 1: Changing base defaults var options = new RedactorOptions { RedactionCharacter = 'X' }; var redactor = new Redactor(options); // returns \"XXXXXXXXXXXXX\" var result = redactor.RedactString(\"Hello, World!\"); This example shows StringRedactorOptions being passed into the Redactor constructor. Only string redactions will now use 'A' as the redaction character, all others will continue to use the default character of '*'. // Example 2: Changing specific redaction type options var options = new RedactorOptions { StringRedactorOptions = new StringRedactorOptions { RedactionCharacter = 'A' } }; var redactor = new Redactor(options); // returns \"AAAAAAAAAAAAA\" var result = redactor.RedactString(\"Hello, World!\"); This example shows passing in StringRedactorOptions at the time of redaction, which takes precedence over the constructor options. // Example 3: Changing redaction options at redaction time var options = new RedactorOptions { StringRedactorOptions = new StringRedactorOptions { RedactionCharacter = 'A' } }; var redactor = new Redactor(options); var specificOptions = new StringRedactorOptions { RedactionCharacter = 'B' }; // returns \"BBBBBBBBBBBBB\" var result = redactor.RedactString(\"Hello, World!\", specificOptions); Redacting Types The following outline the types of data that can be redacted with ZeroRedact. Each data type comes with various redaction types. Strings See String Redaction for more information. var redactor = new Redactor(); var sensitiveInfo = \"Hello, world!\"; // Uses the default redactor (All) // returns \"*************\" var allRedaction = redactor.RedactString(sensitiveInfo); // returns \"********\" var fixedLengthOptions = new StringRedactorOptions { RedactorType = StringRedaction.FixedLength }; var fixedLengthRedaction = redactor.RedactString(sensitiveInfo, fixedLengthOptions); // returns \"Hello,*******\" var firsthalfOptions = new StringRedactorOptions { RedactorType = StringRedaction.FirstHalf }; var firstHalfRedaction = redactor.RedactString(sensitiveInfo, firsthalfOptions); // returns \"******, *****!\" var ignoreSymbolsOptions = new StringRedactorOptions { RedactorType = StringRedaction.IgnoreSymbols }; var ignoreSymbolsRedaction = redactor.RedactString(sensitiveInfo, ignoreSymbolsOptions) Email address See Email Address Redaction for more information. var redactor = new Redactor(); var emailAddress = \"email@example.com\"; // Uses the default redactor (Full) // returns \"*****@*******.***\" var fullRedaction = redactor.RedactEmailAddress(emailAddress); // returns \"*****************\" var allOptions = new EmailAddressRedactorOptions { RedactorType = EmailAddressRedaction.All }; var allRedaction = redactor.RedactEmailAddress(emailAddress, allOptions); // returns \"********\" var fixedLengthOptions = new EmailAddressRedactorOptions { RedactorType = EmailAddressRedaction.FixedLength }; var fixedLengthRedaction = redactor.RedactEmailAddress(emailAddress, fixedLengthOptions); // returns \"*****@example.com\" var usernameOptions = new EmailAddressRedactorOptions { RedactorType = EmailAddressRedaction.Username }; var usernameRedaction = redactor.RedactEmailAddress(emailAddress, usernameOptions); // returns \"***il@example.com\" var firstHalfUsernameOptions = new EmailAddressRedactorOptions { RedactorType = EmailAddressRedaction.FirstHalfUsername }; var firstHalfUsernameRedaction = redactor.RedactEmailAddress(emailAddress, firstHalfUsernameOptions); // returns \"em*********le.com\" var middleOptions = new EmailAddressRedactorOptions { RedactorType = EmailAddressRedaction.Middle }; var middleRedaction = redactor.RedactEmailAddress(emailAddress, middleOptions); // returns \"e***l@example.com\" var mostUsernameOptions = new EmailAddressRedactorOptions { RedactorType = EmailAddressRedaction.MostUsername }; var mostUsernameRedaction = redactor.RedactEmailAddress(emailAddress, mostUsernameOptions); // returns \"e****@e******.com\" var showFirstCharactersOptions = new EmailAddressRedactorOptions { RedactorType = EmailAddressRedaction.ShowFirstCharacters }; var showFirstCharactersRedaction = redactor.RedactEmailAddress(emailAddress, showFirstCharactersOptions); Credit card See Credit Card Redaction for more information. var redactor = new Redactor(); var creditCard = \"4111-1111-1111-1111\"; // Uses default redactor (Full) // returns \"****-****-****-****\" var fullRedaction = redactor.RedactCreditCard(creditCard); // returns \"*******************\" var allOptions = new CreditCardRedactorOptions { RedactorType = CreditCardRedaction.All }; var allRedaction = redactor.RedactCreditCard(creditCard, allOptions); // returns \"********\" var fixedLengthOptions = new CreditCardRedactorOptions { RedactorType = CreditCardRedaction.FixedLength }; var fixedLengthRedaction = redactor.RedactCreditCard(creditCard, fixedLengthOptions); // returns \"****-****-****-1111\" var showLastFourOptions = new CreditCardRedactorOptions { RedactorType = CreditCardRedaction.ShowLastFour }; var showLastFourRedaction = redactor.RedactCreditCard(creditCard, showLastFourOptions); // returns \"4111-11**-****-1111\" var showFirstSixLastFourOptions = new CreditCardRedactorOptions { RedactorType = CreditCardRedaction.ShowFirstSixLastFour }; var showFirstSixLastFourRedaction = redactor.RedactCreditCard(creditCard, showFirstSixLastFourOptions); Date See Date Redaction for more information. Note: Date redaction depends on the current culture. Below show four culture examples. var redactor = new Redactor(); var date = new DateTime(2023, 06, 15); // Uses default redactor (Full) // returns // en-NZ: \"**/**/****\" // en-US: \"*/**/****\" // ja-JP: \"****/**/**\" // InvariantCulture: \"**/**/****\" var fullRedaction = redactor.RedactDate(date); // returns // en-NZ: \"*********\" // en-US: \"********\" // ja-JP: \"*********\" // InvariantCulture: \"*********\" var allOptions = new DateRedactorOptions { RedactorType = DateRedaction.All }; var allRedaction = redactor.RedactDate(date, allOptions); // returns // en-NZ: \"********\" // en-US: \"********\" // ja-JP: \"********\" // InvariantCulture: \"********\" var fixedLengthOptions = new DateRedactorOptions { RedactorType = DateRedaction.FixedLength }; var fixedLengthRedaction = redactor.RedactDate(date, fixedLengthOptions); // returns // en-NZ: \"**/06/2023\" // en-US: \"6/**/2023\" // ja-JP: \"2023/06/**\" // InvariantCulture: \"06/**/2023\" var dayOptions = new DateRedactorOptions { RedactorType = DateRedaction.Day }; var dayRedaction = redactor.RedactDate(date, dayOptions); // returns // en-NZ: \"15/**/2023\" // en-US: \"*/15/2023\" // ja-JP: \"2023/**/15\" // InvariantCulture: \"**/15/2023\" var monthOptions = new DateRedactorOptions { RedactorType = DateRedaction.Month }; var monthRedaction = redactor.RedactDate(date, monthOptions); // returns // en-NZ: \"15/06/****\" // en-US: \"6/15/****\" // ja-JP: \"****/06/15\" // InvariantCulture: \"06/15/****\" var yearOptions = new DateRedactorOptions { RedactorType = DateRedaction.Year }; var yearRedaction = redactor.RedactDate(date, yearOptions); // returns // en-NZ: \"**/**/2023\" // en-US: \"*/**/2023\" // ja-JP: \"2023/**/**\" // InvariantCulture: \"**/**/2023\" var dayAndMonthOptions = new DateRedactorOptions { RedactorType = DateRedaction.DayAndMonth }; var dayAndMonthRedaction = redactor.RedactDate(date, dayAndMonthOptions); // returns // en-NZ: \"15/**/****\" // en-US: \"*/15/****\" // ja-JP: \"****/**/15\" // InvariantCulture: \"**/15/****\" var monthAndYearOptions = new DateRedactorOptions { RedactorType = DateRedaction.DayAndMonth }; var monthAndYearRedaction = redactor.RedactDate(date, monthAndYearOptions); // returns // en-NZ: \"**/06/****\" // en-US: \"6/**/****\" // ja-JP: \"****/06/**\" // InvariantCulture: \"06/**/****\" var dayAndYearOptions = new DateRedactorOptions { RedactorType = DateRedaction.DayAndYear }; var dayAndYearRedaction = redactor.RedactDate(date, dayAndYearOptions); Phone number See Phone Number Redaction for more information on redacting and number formats. var redactor = new Redactor(); var phoneNumber = \"212-456-7890\"; // Uses default redactor (Full) // returns \"***-***-****\" var fullRedaction = redactor.RedactPhoneNumber(phoneNumber); // returns \"************\" var allOptions = new PhoneNumberRedactorOptions { RedactorType = PhoneNumberRedaction.All }; var allRedaction = redactor.RedactPhoneNumber(phoneNumber, allOptions); // returns \"********\" var fixedLengthOptions = new PhoneNumberRedactorOptions { RedactorType = PhoneNumberRedaction.FixedLength }; var fixedLengthRedaction = redactor.RedactPhoneNumber(phoneNumber, fixedLengthOptions); // returns \"***-***-7890\" var showLastFourOptions = new PhoneNumberRedactorOptions { RedactorType = PhoneNumberRedaction.ShowLastFour }; var showLastFourRedaction = redactor.RedactPhoneNumber(phoneNumber, showLastFourOptions); IPv4 address See IPv4 Address Redaction for more information. var redactor = new Redactor(); var ipv4Address = \"192.0.2.146\"; // Uses default redactor (Full) // returns \"***.*.*.***\" var fullRedaction = redactor.RedactIPv4Address(ipv4Address); // returns \"***********\" var allOptions = new IPv4RedactorOptions { RedactorType = IPv4Redaction.All }; var allRedaction = redactor.RedactIPv4Address(ipv4Address, allOptions); // returns \"********\" var fixedLengthOptions = new IPv4RedactorOptions { RedactorType = IPv4Redaction.FixedLength }; var fixedLengthRedaction = redactor.RedactIPv4Address(ipv4Address, fixedLengthOptions); // returns \"***.*.*.146\" var showLastOctetOptions = new IPv4RedactorOptions { RedactorType = IPv4Redaction.ShowLastOctet }; var showLastOctetRedaction = redactor.RedactIPv4Address(ipv4Address, showLastOctetOptions); IPv6 address See IPv6 Address Redaction for more information. var redactor = new Redactor(); var ipv6Address = \"2001:0000:130F:0000:0000:09C0:876A:130B\"; // Uses default redactor (Full) // returns \"****:****:****:****:****:****:****:****\" var fullRedaction = redactor.RedactIPv6Address(ipv6Address); // returns \"***************************************\" var allOptions = new IPv6RedactorOptions { RedactorType = IPv6Redaction.All }; var allRedaction = redactor.RedactIPv6Address(ipv6Address, allOptions); // returns \"********\" var fixedLengthOptions = new IPv6RedactorOptions { RedactorType = IPv6Redaction.FixedLength }; var fixedLengthRedaction = redactor.RedactIPv6Address(ipv6Address, fixedLengthOptions); // returns \"****:****:****:****:****:****:****:130B\" var showLastQuartetOptions = new IPv6RedactorOptions { RedactorType = IPv6Redaction.ShowLastQuartet }; var showLastQuartetRedaction = redactor.RedactIPv6Address(ipv4Address, showLastQuartetOptions); MAC address See MAC Address Redaction for more information. var redactor = new Redactor(); var macAddress = \"00:B0:D0:63:C2:26\"; // Uses default redactor (Full) // returns \"****:****:****:****:****:****:****:****\" var fullRedaction = redactor.RedactMACAddress(macAddress); // returns \"***************************************\" var allOptions = new MACAddressRedactorOptions { RedactorType = MACAddressRedaction.All }; var allRedaction = redactor.RedactMACAddress(macAddress, allOptions); // returns \"********\" var fixedLengthOptions = new MACAddressRedactorOptions { RedactorType = MACAddressRedaction.FixedLength }; var fixedLengthRedaction = redactor.RedactMACAddress(macAddress, fixedLengthOptions); // returns \"****:****:****:****:****:****:****:130B\" var showLastByteOptions = new MACAddressRedactorOptions { RedactorType = MACAddressRedaction.ShowLastByte }; var showLastByteRedaction = redactor.RedactMACAddress(macAddress, showLastByteOptions); Concepts API Design Read more in the General Design document. Permissive inputs There is an assumption that the data coming into ZeroRedact is already well formed, however there are often multiple opinions or standards of what \"well formed\" means. ZeroRedact does not fully validate incoming data as the only validation is whether key shapes of the data are present for redaction. For example: var invalidEmail = \".email@example.com\" var redactor = new Redactor(); // result \"******@*******.***\" var result = redactor.RedactEmailAddress(invalidEmail) While it is invalid, it has what ZeroRedact requires: An '@' sign Left of the final '@' sign not being empty A '.' The right of the final '.' not being empty Assuming the incoming data is well formed, this means ZeroRedact has an advantage of being able to accept all sorts of formats such as for telephone numbers: +1 (555) 123-4567 +86 137 1234 5678 555 123 456 555123456 +7 495 123-45-67 Layered configuration Users should have a fine grained customization experience which allows for an easy to reuse item that can setup default behaviours but when needed, can adapt to the need of the redaction call at the time. Error handling Redacting will not throw exceptions - that is, the string manipulation logic. Any exception during the redacting process will return a fixed length redaction with a default redacting character. This is to avoid disrupting the important real work happening in a user's codebase while still preventing PII from being exposed. However exceptions can occur by passing invalid options to the redactor, whether that's via the constructor, or via a redaction method. No external dependencies No extra NuGet packages are pulled in when using ZeroRedact. Performance Benchmarks See benchmarks. License MIT"
  }
}