# Simple workflow for deploying static content to GitHub Pages
name: Deploy static content to Pages

on:
  # Runs on pushes targeting the default branch
  push:
    branches: ["main"]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  publish-pages:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    steps:
    - name: Checkout
      uses: actions/checkout@v3
    - name: Dotnet Setup
      uses: actions/setup-dotnet@v3

    - run: dotnet tool update -g docfx
    - run: docfx docfx/docfx.json

    - name: Setup .NET SDK
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: 8.0.x
    - name: Install .NET WebAssembly Tools
      run: dotnet workload install wasm-tools

    - name: Publish
      run: dotnet publish src/ZeroRedact.DemoSite/ZeroRedact.DemoSite.csproj -c:Release -o:publish -p:GHPages=true -p:GHPagesBase=demoWasm

    - name: Create deployment directory
      run: mkdir deployment

    - name: Create wasm deployment directory
      run: mkdir deployment/demoWasm/

    - name: Copy DocFX site to deployment directory
      run: cp -r docfx/_site/* deployment/

    - name: Copy .NET site to deployment directory
      run: cp -r publish/wwwroot/* deployment/demoWasm/

    - name: Upload GitHub Pages artifact
      uses: actions/upload-pages-artifact@v3.0.1
      with:
        path: deployment

    - name: Deploy to GitHub Pages
      uses: actions/deploy-pages@v4
      id: deployment